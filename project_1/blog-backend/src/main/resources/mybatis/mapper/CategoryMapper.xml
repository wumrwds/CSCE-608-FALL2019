<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.tamu.wumrwds.database.mapper.CategoryMapper">
    <resultMap id="BaseResultMap" type="edu.tamu.wumrwds.database.entity.Category">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <resultMap id="AvgCountResultMap" type="edu.tamu.wumrwds.database.entity.dto.CategoryDTO">
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="avg_count" jdbcType="DOUBLE" property="avgCount"/>
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, `name`
        from tt_category
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, `name`
        from tt_category
    </select>

    <select id="selectAvgCommentCount" resultMap="AvgCountResultMap">
        select category_id, t4.name as `category_name`, avg_count
        from (
            select category_id, avg(count) as `avg_count`
            from (
                select article_id, count(1) as `count`
                from tt_comment t1
                left outer join tt_article t2
                on t1.article_id = t2.id
                group by article_id
            ) st1
            INNER JOIN tt_article_to_category t3
            on st1.article_id = t3.article_id
            group by category_id
        ) st2
        LEFT OUTER JOIN tt_category t4
        on t4.id = st2.category_id
        order by avg_count desc
    </select>
</mapper>